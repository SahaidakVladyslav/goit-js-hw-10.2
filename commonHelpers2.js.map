{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/izitoast.min.css\";\n\n\n\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\nconst inputDays = document.querySelector('[data-days]');\nconst inputHours = document.querySelector('[data-hours]');\nconst inputMinutes = document.querySelector('[data-minutes]');\nconst inputSeconds = document.querySelector('[data-seconds]');\nlet timeUpdateTime = null;\nlet valueDato;\nlet proDato;\nlet milliseconds;\nconst btnNone = () => {\n    btnStart.style.opacity = 0.5;\n    btnStart.style.pointerEvents = 'none';\n};\n\nconst btnAuto = () => {\n    btnStart.style.pointerEvents = 'auto';\n    btnStart.style.opacity = 1;\n};\n\nconst emptyTextContent = () => {\n    inputDays.textContent = '00';\n    inputHours.textContent = '00';\n    inputMinutes.textContent = '00';\n    inputSeconds.textContent = '00';\n};\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nconst padStartFunction = ({ days, hours, minutes, seconds }) => {\n    const proDays = days.toString().padStart(2, 0)\n    const proHours = hours.toString().padStart(2, 0)\n    const proMinutes = minutes.toString().padStart(2, 0)\n    const proSeconds = seconds.toString().padStart(2, 0)\n    return { proDays, proHours, proMinutes, proSeconds }\n}\n\nfunction timerTextContent() {\n    timeUpdateTime = setInterval(() => {\n        milliseconds -= 1000\n        if (milliseconds < 1000) {\n            clearInterval(timeUpdateTime)\n        }\n        valueDato = convertMs(milliseconds)\n        proDato = padStartFunction(valueDato)\n\n        inputDays.textContent = `${proDato.proDays}`;\n        inputHours.textContent = `${proDato.proHours}`;\n        inputMinutes.textContent = `${proDato.proMinutes}`;\n        inputSeconds.textContent = `${proDato.proSeconds}`;\n    }, 1000)\n}\n\nbtnNone();\n\n\niziToast.settings({\n    timeout: 2000,\n    resetOnHover: true,\n    icon: 'material-icons',\n    transitionIn: 'flipInX',\n    transitionOut: 'flipOutX',\n    position: \"topRight\",\n    onOpening: function () {\n        console.log('callback abriu!');\n    },\n});\n\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        clearInterval(timeUpdateTime);\n        if (selectedDates[0].getTime() <= options.defaultDate.getTime()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n            emptyTextContent()\n            btnNone();\n        } else {\n            btnAuto()\n            milliseconds = +selectedDates[0].getTime() - +options.defaultDate.getTime()\n            valueDato = convertMs(milliseconds)\n            proDato = padStartFunction(valueDato)\n\n            inputDays.textContent = `${proDato.proDays}`;\n            inputHours.textContent = `${proDato.proHours}`;\n            inputMinutes.textContent = `${proDato.proMinutes}`;\n            inputSeconds.textContent = `${proDato.proSeconds}`;\n        }\n    },\n};\n\nflatpickr(inputEl, options);\n\nbtnStart.addEventListener('click', () => {\n    btnNone()\n    timerTextContent()\n});\n"],"names":["inputEl","btnStart","inputDays","inputHours","inputMinutes","inputSeconds","timeUpdateTime","valueDato","proDato","milliseconds","btnNone","btnAuto","emptyTextContent","convertMs","ms","days","hours","minutes","seconds","padStartFunction","proDays","proHours","proMinutes","proSeconds","timerTextContent","iziToast","options","selectedDates","flatpickr"],"mappings":"0LASA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5D,IAAIC,EAAiB,KACjBC,EACAC,EACAC,EACJ,MAAMC,EAAU,IAAM,CAClBT,EAAS,MAAM,QAAU,GACzBA,EAAS,MAAM,cAAgB,MACnC,EAEMU,EAAU,IAAM,CAClBV,EAAS,MAAM,cAAgB,OAC/BA,EAAS,MAAM,QAAU,CAC7B,EAEMW,EAAmB,IAAM,CAC3BV,EAAU,YAAc,KACxBC,EAAW,YAAc,KACzBC,EAAa,YAAc,KAC3BC,EAAa,YAAc,IAC/B,EAEA,SAASQ,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,MAAMC,EAAmB,CAAC,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC5D,MAAME,EAAUL,EAAK,SAAU,EAAC,SAAS,EAAG,CAAC,EACvCM,EAAWL,EAAM,SAAU,EAAC,SAAS,EAAG,CAAC,EACzCM,EAAaL,EAAQ,SAAU,EAAC,SAAS,EAAG,CAAC,EAC7CM,EAAaL,EAAQ,SAAU,EAAC,SAAS,EAAG,CAAC,EACnD,MAAO,CAAE,QAAAE,EAAS,SAAAC,EAAU,WAAAC,EAAY,WAAAC,CAAY,CACxD,EAEA,SAASC,GAAmB,CACxBlB,EAAiB,YAAY,IAAM,CAC/BG,GAAgB,IACZA,EAAe,KACf,cAAcH,CAAc,EAEhCC,EAAYM,EAAUJ,CAAY,EAClCD,EAAUW,EAAiBZ,CAAS,EAEpCL,EAAU,YAAc,GAAGM,EAAQ,UACnCL,EAAW,YAAc,GAAGK,EAAQ,WACpCJ,EAAa,YAAc,GAAGI,EAAQ,aACtCH,EAAa,YAAc,GAAGG,EAAQ,YACzC,EAAE,GAAI,CACX,CAEAE,IAGAe,EAAS,SAAS,CACd,QAAS,IACT,aAAc,GACd,KAAM,iBACN,aAAc,UACd,cAAe,WACf,SAAU,WACV,UAAW,UAAY,CACnB,QAAQ,IAAI,iBAAiB,CAChC,CACL,CAAC,EAID,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,cAAcrB,CAAc,EACxBqB,EAAc,GAAG,QAAS,GAAID,EAAQ,YAAY,WAClDD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACDb,EAAkB,EAClBF,MAEAC,EAAS,EACTF,EAAe,CAACkB,EAAc,GAAG,QAAO,EAAK,CAACD,EAAQ,YAAY,QAAS,EAC3EnB,EAAYM,EAAUJ,CAAY,EAClCD,EAAUW,EAAiBZ,CAAS,EAEpCL,EAAU,YAAc,GAAGM,EAAQ,UACnCL,EAAW,YAAc,GAAGK,EAAQ,WACpCJ,EAAa,YAAc,GAAGI,EAAQ,aACtCH,EAAa,YAAc,GAAGG,EAAQ,aAE7C,CACL,EAEAoB,EAAU5B,EAAS0B,CAAO,EAE1BzB,EAAS,iBAAiB,QAAS,IAAM,CACrCS,EAAS,EACTc,EAAkB,CACtB,CAAC"}